

struct PS_INPUT
{
    float4 position  : POSITION;
	float3 normal	 : TEXCOORD1;
	float3 direction : TEXCOORD2;
	float3 viewDir	 : TEXCOORD3;
    float4 diffuse   : COLOR0;
    float4 specular  : COLOR1;
};

float4 main(PS_INPUT input) : COLOR0
{

	float ndotl = dot(input.normal, (input.direction));
	float specular_power = 0;
	
	// brass matrial
	float4 ambient = float4( .329412f, .223529f, .027451f,1);
	float4 diffuse = float4( .780392, .568627, .113725, 1 );
	float4 specular = float4(.992157,.941176,.806843,1);
	
	if( ndotl > 0)
	{
		const float3 Reflection = 2 * input.normal * ndotl - (input.direction);
		float vdotr = dot(Reflection, input.viewDir);
		if( vdotr > 0 )
		{
			   specular_power = pow(vdotr, 27.9);
		}
	}
	
	float4 light = ambient + ndotl *diffuse + specular* specular_power;
	
	
	
	return light;
}
